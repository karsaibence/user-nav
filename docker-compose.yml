services:
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/var/www/html
      - /var/www/html/storage
      - /var/www/html/bootstrap/cache
      - ./php-fpm/www.conf:/usr/local/etc/php-fpm.d/www.conf
    ports:
      - 9000:9000
    depends_on:
      - db
    networks:
      - mysql-phpmyadmin

  db:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: user_nav
      MYSQL_PASSWORD: root
    volumes:
      - ./data:/var/lib/mysql
      - ./mysql.cnf:/etc/mysql/conf.d/mysql.cnf
    ports:
      - 3306:3306
    networks:
      - mysql-phpmyadmin
  web:
    build:
      context: ./frontend  # A frontend mappa, ahol a Dockerfile található
      dockerfile: Dockerfile  # Ha a Dockerfile neve nem változott
    volumes:
      - ./frontend:/app  # A frontend mappa, ahol a Node.js kód található
    stdin_open: true
    tty: true
    networks:
      - mysql-phpmyadmin
    depends_on:
      - app

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    restart: always
    depends_on:
      - nginx
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "8080:80"
    networks:
      - mysql-phpmyadmin

  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - ./frontend/build:/usr/share/nginx/html  # A build mappa hozzáadása az nginxhez
      - ./frontend/default.conf:/etc/nginx/conf.d/default.conf  # Az nginx konfigurációs fájl
    networks:
      - mysql-phpmyadmin
    depends_on:
      - web

networks:
  mysql-phpmyadmin:
    driver: bridge
    enable_ipv6: false
  
volumes:
  db_data: